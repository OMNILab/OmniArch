name: Build and Push Images

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      force_build_all:
        description: 'Force build all images regardless of changes'
        required: false
        default: false
        type: boolean

permissions:
  contents: read
  packages: write

jobs:
  filter-changes:
    runs-on: ubuntu-latest
    outputs:
      smartmeeting: ${{ steps.filter.outputs.smartmeeting }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Filter changed paths
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            smartmeeting:
              - 'smartmeeting/Dockerfile'
              - 'smartmeeting/mock/**'
              - 'smartmeeting/**'
              - 'smartmeeting/app.py'

      - name: Set force build flag
        id: force_build
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ] && [ "${{ github.event.inputs.force_build_all }}" == "true" ]; then
            echo "force_build=true" >> $GITHUB_OUTPUT
          else
            echo "force_build=false" >> $GITHUB_OUTPUT
          fi

  build-and-push:
    needs: filter-changes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        component:
          - name: smartmeeting
            path: smartmeeting/Dockerfile
            context: smartmeeting
            tag: smartmeeting
            version: latest
            condition: ${{ needs.filter-changes.outputs.smartmeeting }}
      fail-fast: false

    steps:
      - name: Check if component has changes
        if: ${{ matrix.component.condition != 'true' && needs.filter-changes.outputs.force_build != 'true' }}
        run: |
          echo "No changes detected for ${{ matrix.component.name }}. Skipping build."
          exit 0

      - name: Checkout code
        if: ${{ matrix.component.condition == 'true' || needs.filter-changes.outputs.force_build == 'true' }}
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        if: ${{ matrix.component.condition == 'true' || needs.filter-changes.outputs.force_build == 'true' }}
        uses: docker/setup-buildx-action@v3

      - name: Log in to Aliyuncs Registry
        if: ${{ matrix.component.condition == 'true' || needs.filter-changes.outputs.force_build == 'true' }}
        uses: docker/login-action@v3
        with:
          registry: registry.cn-hangzhou.aliyuncs.com
          username: ${{ secrets.ALIYUNCS_USERNAME }}
          password: ${{ secrets.ALIYUNCS_TOKEN }}

      - name: Build and push ${{ matrix.component.name }} image
        if: ${{ matrix.component.condition == 'true' || needs.filter-changes.outputs.force_build == 'true' }}
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.component.context }}
          file: ${{ matrix.component.path }}
          push: true
          platforms: linux/amd64
          cache-from: type=gha,scope=${{ matrix.component.name }}
          cache-to: type=gha,mode=max,scope=${{ matrix.component.name }}
          tags: |
            registry.cn-hangzhou.aliyuncs.com/lacogito/${{ matrix.component.tag }}:${{ matrix.component.version }}